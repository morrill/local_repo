#%% 
water = read_data('water.csv')
air = read_data('air.csv')
# cold side fluid properties (manual input)
inner_fluid = water           # enter "air" or "water" (w/o "") for the fluid you're working with
outer_fluid = air             # enter "air" or "water" (w/o "") for the fluid you're working with
condition = 'free'       # enter 'forced' or 'free' for forced or free convection, respectively
orientation = 'bottom'   # orientation of hot surface
# temperature
Th = 372.0         # hot stream tempertaure [K]
Tc = 294.0         # cold stream temperature [K]
# geometry
# lenght will be varied array
ts = 100e-6                       # spacer thickness between legs [m]
tw = 0.01                        # axial length of radial device [m]
Lw = 0.002                       # thickness of pipe for radial device and base plate for planar [m]
D = 8e-3                         # outer diemeter of pipe we're copmaring to [m]
FF = np.linspace(0.1,1,num=10) # fill factor array
Ah = tw*m.pi*D                 # hot side area [m^2]
t = (FF*tw*m.pi*D)**(1/2)         # side length of TE legs [m]
# material properties
kh = get_props_for_hh(inner_fluid,Th) # thermal conductivity of fluid in hot side pipe [W/m.K]
kn = 0.51                  # n-type material thermal conductivity [W/m.K]
kp = 0.46                  # p-type material thermal conductivity [W/m.K]
ks = 1.0e-1                  # spacer/insulator thermal conductivity [W/m.K]
Sn = -193e-6                 # n-type Seebeck coefficient [V/K] 
Sp = 225e-6                  # p-type Seebeck coefficient [V/K] 
sigma_n = 39000             # n-type electrical conductivity [S/m]
sigma_p = 35000             # p-type electrical conductivity [S/m]
sigma_c = 5.8824e+7         # electrical shunt conductivity [S/m]
####################################################################################################
array sizes
FF = np.linspace(0.1,1,num=10) # fill factor array
t = (FF*tw*m.pi*D)**(1/2) 

elements1 = 16
elements2 = 18
elements3 = 18
elements4 = 90
elements5 = 100
elements6 = 17
elemnetstn = 8
one = np.linspace(200e-6, 1e-3, elements1, dtype=float, endpoint=False)
two = np.linspace(1e-3, 10e-3, elements2, dtype=float, endpoint=False)
three = np.linspace(10e-3, 100e-3, elements3, dtype=float, endpoint=False)
four = np.linspace(100e-3, 1000e-3, elements4, dtype=float, endpoint=False)
five = np.linspace(1000e-3, 2000e-3, elements5, dtype=float, endpoint=False)
six = np.linspace(2000e-3, 10000e-3, elements6, dtype=float, endpoint=True)
leglength = np.concatenate((one,two,three,four,five,six), axis=0)

mm = np.arange(0.01,2.01,0.01,dtype=float)
####################################################################################################
